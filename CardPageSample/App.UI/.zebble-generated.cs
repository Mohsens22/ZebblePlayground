//----------------------
// <auto-generated>
//     GENERATED BY ZEBBLE
// </auto-generated>
#pragma warning disable  IDE0017, CS0108, CS0436
//----------------------

#region UI.Pages.CardPage
namespace UI.Pages
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using Domain;
    using Zebble;
    using Zebble.Plugin;
    using Olive;
    using Zebble.Services.Css;

    [EscapeGCop("Auto-generated")]
    [SourceCode(@"Views\Pages\CardPage.zbl")]
    partial class CardPage : Page
    {
        public Stack Scaffold = new Stack();
        public Stack Content = new Stack();
        public Stack Tile = new Stack();
        public ImageView Background = new ImageView();
        public Stack BoxContainer = new Stack();
        public Canvas MessageBackground = new Canvas();
        public TextView Message = new TextView();
        public Stack TitleContainer = new Stack();
        public Row WordElement = new Row();
        public TextView Title = new TextView();
        public Center WordSeprator = new Center();
        public ImageView WordIcon = new ImageView();
        public TextView PronunciationTxt = new TextView();
        public ImageView MenuButton = new ImageView();
        public TextView Tag = new TextView();
        public Center ActionButtonsRow = new Center();
        public Stack LeftButton = new Stack();
        public TextView LeftButtonTxt = new TextView();
        public Stack Seprator = new Stack();
        public Stack RightButton = new Stack();
        public TextView RightButtonTxt = new TextView();
        protected override async Task InitializeFromMarkup()
        {
            await base.InitializeFromMarkup();

            Scaffold.Id = "Scaffold";

            Content.Id = "Content";

            Tile.Id = "Tile";
            Tile.ClipChildren = true;

            Background.Id = "Background";
            Background.Path = "Images/Task2.png";
            Background.Stretch = Stretch.AspectFill;
            Background.Alignment = Alignment.Middle;

            BoxContainer.Id = "BoxContainer";

            MessageBackground.Id = "MessageBackground";
            MessageBackground.Set(x => x.Style.Height = 100.Percent())
            .Set(x => x.Style.Width = 100.Percent())
            .Set(x => x.Style.ZIndex = 0)
            .Set(x => x.Style.Absolute = true)
            .Set(x => x.Style.X = 0)
            .Set(x => x.Style.Y = 0)
            .Set(x => x.Style.Opacity = 0.2f)
            .Set(x => x.Style.BackgroundColor = "#000000");

            Message.Id = "Message";
            Message.Text = "To drink so that you no longer feel thirsty.";

            TitleContainer.Id = "TitleContainer";

            WordElement.Id = "WordElement";

            Title.Id = "Title";
            Title.Text = "Slake";

            WordSeprator.Id = "WordSeprator";

            WordIcon.Id = "WordIcon";
            WordIcon.Path = "Images/Icons/Speaker.png";

            PronunciationTxt.Id = "PronunciationTxt";
            PronunciationTxt.Text = "/sleɪk/";

            MenuButton.Id = "MenuButton";
            MenuButton.Path = "Images/Icons/MenuCircle.png";

            Tag.Id = "Tag";
            Tag.Text = "#14,564";

            ActionButtonsRow.Id = "ActionButtonsRow";

            LeftButton.Id = "LeftButton";
            LeftButton.CssClass = "rounded-button left-button";
            LeftButton.On(x => x.Tapped, DarkThemeButtonTapped);

            LeftButtonTxt.Id = "LeftButtonTxt";
            LeftButtonTxt.Text = "Dark theme";

            Seprator.Id = "Seprator";

            RightButton.Id = "RightButton";
            RightButton.CssClass = "rounded-button right-button";

            RightButtonTxt.Id = "RightButtonTxt";
            RightButtonTxt.Text = "Light theme";
            RightButtonTxt.On(x => x.Tapped, LightThemeButtonTapped);

            await WordElement.AddRange(new View[] { Title, WordSeprator, WordIcon });
            await BoxContainer.AddRange(new View[] { MessageBackground, Message });
            await TitleContainer.AddRange(new View[] { WordElement, PronunciationTxt });
            await LeftButton.Add(LeftButtonTxt);
            await RightButton.Add(RightButtonTxt);
            await Tile.AddRange(new View[] { Background, BoxContainer, TitleContainer, MenuButton, Tag });
            await ActionButtonsRow.AddRange(new View[] { LeftButton, Seprator, RightButton });
            await Content.AddRange(new View[] { Tile, ActionButtonsRow });
            await Scaffold.Add(Content);
            await Add(Scaffold);
        }
    }
}
#endregion

namespace UI
{
    partial class StartUp
    {
        // Hashed content of all resources
        public override string GetResourcesVersion() => "vmGIA5OiOHX7x1zfD1PXH1cQVcc";
    }
}
